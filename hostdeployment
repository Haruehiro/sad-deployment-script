#!/bin/bash

# Redirect both stdout and stderr to /tmp/script.log
exec 3>&1 1>/tmp/script.log 2>&1

# Function to print echo messages to the console
log() {
  echo "$@" >&3
}

# Clear the screen
clear >&3

# Initial Setup
log
log "Updating package list and upgrading existing packages..."
log
sudo apt update && sudo apt upgrade -y && sudo apt autoremove -yq && sudo apt autoclean -yq

# Install Dependencies
log
log "Installing necessary packages..."
# List of packages to install
packages=(
  docker.io
  docker-compose
  nano
  git
  curl
  wget
  unzip
  nginx
  ufw
  fail2ban
)
# Install all packages in one command
sudo apt install -y "${packages[@]}"

# Server Hardening
log
log "Configuring server hardening..."
sudo ufw --force enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
# Array of ports to allow
ports=(ssh http https 2375 2376 9443)
# Loop through the ports and allow them
for port in "${ports[@]}"; do
  sudo ufw allow "$port"
done

# Docker Configuration
log
log "Configuring Docker settings..."
sudo systemctl enable docker
sudo docker network create --driver bridge app-network

# Install Portainer
log
log "Installing Portainer..."
sudo docker volume create portainer_data
sudo docker run -d -p 9443:9443 \
    --name portainer \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v portainer_data:/data \
    portainer/portainer-ce:latest

# Install Certbot
log
log "Installing Certbot..."
sudo apt install -y certbot python3-certbot-nginx

# Nginx Configuration
log
log "Configuring Nginx Web Server settings..."
sudo tee /etc/nginx/sites-available/default <<EOF
server {
    listen 80;
    server_name sayonarakuso.com;

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF
sudo service nginx restart

# Fail2Ban Configuration
log
log "Configuring Fail2Ban settings..."
sudo tee /etc/fail2ban/jail.local <<EOF
[sshd]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
EOF
sudo service fail2ban restart

# Two-Factor Authentication (Google Authenticator)
log
log "Installing Google Authenticator..."
sudo apt install -y libpam-google-authenticator
sudo tee /etc/pam.d/sshd <<EOF
auth required pam_google_authenticator.so
EOF
sudo tee /etc/ssh/sshd_config <<EOF
ChallengeResponseAuthentication yes
AuthenticationMethods publickey,keyboard-interactive
EOF
sudo service ssh restart

# User Management
log
log "Creating a new user and adding them to the Docker group..."
sudo useradd -m -s /bin/bash -G docker your_username
log
log "Please switch to the new user: su - your_username"

# Docker Compose Setup
log
log "Creating a default Docker Compose file..."
sudo tee docker-compose.yml <<EOF
version: '3'

services:
  web:
    build: .
    ports:
      - "8080:80"
    networks:
      - app-network
    restart: always

networks:
  app-network:
    external: true
EOF

# Final Steps
log
log "Build and start the Docker container: sudo docker-compose up -d"
log "Configure the web application and Nginx settings as needed."
log "Logfile: cat /tmp/script.log"
log